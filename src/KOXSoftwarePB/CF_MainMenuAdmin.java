/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package KOXSoftwarePB;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import static javax.swing.JOptionPane.showMessageDialog;



 /**
 * Program służacy do obsługi bazy danych dla placówki dydaktycznej
 * @author Kusek Jan Aleksander Krawiec
 * @version 1.0
 * @see CFrameStudents
 * @see CFrameAvailableClass
 * @see CFrameClassAddDelete
 * @see CFrameClassEdit
 * @see CFrameFindStudent
 * @see CFrameTeacher
 * @see CFrameStudentsAddDelete
 * @see CFrameStudentsMoney
 * @see CFrameSubjectAddDelete
 * @see CFrameTeacher
 * @see CFrameTeacherAssignment
 * @see CFrameTeachersAddDelete
 * @see java.sql
 * @see java.swing
*/
 
public class CF_MainMenuAdmin extends javax.swing.JFrame {

    /**
     * Tworzy nową ramke menu głownego
     */
    public CF_MainMenuAdmin() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        
    }
    
    /**
     * Odpowiada za każde połączenie z bazą danych
     * @param cnx Obiekt połącznia z bazą
     * @param driver Driver służący do połączenia
     * @param url Adres połączenia
     * @param user Nazwa użytkownika w bazie
     * @param password Hasło użytkownika w bazie
     * @throws e Sprawdzenie czy połączenie z bazą przebiegło pomyslnie
     */
    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MMA_ClientEdit = new javax.swing.JButton();
        MMA_ClientAddDelete = new javax.swing.JButton();
        MMA_CCTV = new javax.swing.JButton();
        Main_CloseProgram_Button = new javax.swing.JButton();
        MMA_CarWashReservations = new javax.swing.JButton();
        MMA_CarWash = new javax.swing.JButton();
        MMA_ClientCheck = new javax.swing.JButton();
        MMA_ClientPointsAdd = new javax.swing.JButton();
        MMA_PriceList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Stacja paliw");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Monospaced", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Panel Administracyjny");

        MMA_ClientEdit.setBackground(new java.awt.Color(102, 255, 102));
        MMA_ClientEdit.setText("Edycja danych klienta");
        MMA_ClientEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMA_ClientEditActionPerformed(evt);
            }
        });

        MMA_ClientAddDelete.setBackground(new java.awt.Color(102, 255, 102));
        MMA_ClientAddDelete.setText("Dodanie/usuwanie klienta");
        MMA_ClientAddDelete.setMaximumSize(new java.awt.Dimension(149, 23));
        MMA_ClientAddDelete.setMinimumSize(new java.awt.Dimension(149, 23));
        MMA_ClientAddDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMA_ClientAddDeleteActionPerformed(evt);
            }
        });

        MMA_CCTV.setBackground(new java.awt.Color(0, 255, 255));
        MMA_CCTV.setText("Sprawdź monitoring");
        MMA_CCTV.setMaximumSize(new java.awt.Dimension(149, 23));
        MMA_CCTV.setMinimumSize(new java.awt.Dimension(149, 23));
        MMA_CCTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMA_CCTVActionPerformed(evt);
            }
        });

        Main_CloseProgram_Button.setBackground(new java.awt.Color(255, 0, 0));
        Main_CloseProgram_Button.setText("Wyłącz program");
        Main_CloseProgram_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Main_CloseProgram_ButtonActionPerformed(evt);
            }
        });

        MMA_CarWashReservations.setBackground(new java.awt.Color(0, 255, 255));
        MMA_CarWashReservations.setText("Myjnia Rezerwacje");
        MMA_CarWashReservations.setMaximumSize(new java.awt.Dimension(149, 23));
        MMA_CarWashReservations.setMinimumSize(new java.awt.Dimension(149, 23));
        MMA_CarWashReservations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMA_CarWashReservationsActionPerformed(evt);
            }
        });

        MMA_CarWash.setBackground(new java.awt.Color(0, 255, 255));
        MMA_CarWash.setText("Historia transakcji");
        MMA_CarWash.setMaximumSize(new java.awt.Dimension(149, 23));
        MMA_CarWash.setMinimumSize(new java.awt.Dimension(149, 23));
        MMA_CarWash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMA_CarWashActionPerformed(evt);
            }
        });

        MMA_ClientCheck.setBackground(new java.awt.Color(102, 255, 102));
        MMA_ClientCheck.setText("Sprawdź klienta");
        MMA_ClientCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMA_ClientCheckActionPerformed(evt);
            }
        });

        MMA_ClientPointsAdd.setBackground(new java.awt.Color(102, 255, 102));
        MMA_ClientPointsAdd.setText("Dodaj rachunek");
        MMA_ClientPointsAdd.setMaximumSize(new java.awt.Dimension(149, 23));
        MMA_ClientPointsAdd.setMinimumSize(new java.awt.Dimension(149, 23));
        MMA_ClientPointsAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMA_ClientPointsAddActionPerformed(evt);
            }
        });

        MMA_PriceList.setBackground(new java.awt.Color(0, 255, 255));
        MMA_PriceList.setText("Cennik");
        MMA_PriceList.setMaximumSize(new java.awt.Dimension(149, 23));
        MMA_PriceList.setMinimumSize(new java.awt.Dimension(149, 23));
        MMA_PriceList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMA_PriceListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Main_CloseProgram_Button)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(MMA_ClientAddDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                            .addComponent(MMA_ClientCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MMA_ClientPointsAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MMA_ClientEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MMA_CCTV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MMA_CarWash, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(MMA_CarWashReservations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MMA_PriceList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MMA_ClientAddDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(MMA_CarWash, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addComponent(MMA_CarWashReservations, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(MMA_ClientCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MMA_CCTV, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MMA_ClientEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MMA_ClientPointsAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(MMA_PriceList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(Main_CloseProgram_Button)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MMA_ClientEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMA_ClientEditActionPerformed
        CF_ClientEdit CF_ClientEditObject=new CF_ClientEdit();
        CF_ClientEditObject.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MMA_ClientEditActionPerformed

    private void MMA_ClientAddDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMA_ClientAddDeleteActionPerformed
       CF_ClientAddDelete CF_ClientAddDeleteObject= new CF_ClientAddDelete();
       CF_ClientAddDeleteObject.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_MMA_ClientAddDeleteActionPerformed

    private void MMA_CCTVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMA_CCTVActionPerformed
        
        CF_MonitorSystem CF_MonitorSystemObject;
        try {
            CF_MonitorSystemObject = new CF_MonitorSystem();
            CF_MonitorSystemObject.setVisible(true);
            this.dispose();
        } catch (ParseException ex) {
            Logger.getLogger(CF_MainMenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_MMA_CCTVActionPerformed

    private void MMA_CarWashReservationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMA_CarWashReservationsActionPerformed
        
        try {
            CF_ReservationsList CF_ReservationsListObject=new CF_ReservationsList();
            CF_ReservationsListObject.setVisible(true);
            this.dispose();
        } catch (ParseException ex) {
            Logger.getLogger(CF_MainMenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_MMA_CarWashReservationsActionPerformed
    /**
     * Metoda sluząca zakończeniu działania aplikacji
     */
    private void Main_CloseProgram_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Main_CloseProgram_ButtonActionPerformed
        Runtime.getRuntime().exit(0); 
    }//GEN-LAST:event_Main_CloseProgram_ButtonActionPerformed

    private void MMA_CarWashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMA_CarWashActionPerformed
        
        CF_TransactionsList CF_TransactionsListObject;
        try {
            CF_TransactionsListObject = new CF_TransactionsList();
            CF_TransactionsListObject.setVisible(true);
            this.dispose();
        } catch (ParseException ex) {
            Logger.getLogger(CF_MainMenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_MMA_CarWashActionPerformed

    private void MMA_ClientCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMA_ClientCheckActionPerformed
        CF_ClientFind CF_ClientFindObject= new CF_ClientFind();
        CF_ClientFindObject.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MMA_ClientCheckActionPerformed

    private void MMA_ClientPointsAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMA_ClientPointsAddActionPerformed
        CF_ClientPoints CF_ClientPointsObject = new CF_ClientPoints();
        CF_ClientPointsObject.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MMA_ClientPointsAddActionPerformed

    private void MMA_PriceListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMA_PriceListActionPerformed
        // TODO add your handling code here:
        CF_PriceList CF_PriceListObject=new CF_PriceList();
        CF_PriceListObject.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MMA_PriceListActionPerformed
    
   /*  static void nawiazywaniePolaczenia() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://34.89.209.127:3306/BazaDanychLaboratorium?useUnicode=true&characterEncoding=utf-8", "qwertyprzem", "18198996");
            showMessageDialog(null, "Dziaa");
        } catch (Exception e) {
            String komunikat = "Nie udało się połączyć z bazą danych. Komunikat błędu:\n" + e;
            showMessageDialog(null, komunikat);
            Runtime.getRuntime().exit(0);
        }
    }
    */
    /**
     * @param args the command line arguments
     * 
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CF_MainMenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CF_MainMenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CF_MainMenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CF_MainMenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            /**
             * @param CFrameMainMenuObject Obiekt klasy CFrameMainMenu
             */        
            public void run() {
                CF_MainMenuAdmin CFrameMainMenuObject= new CF_MainMenuAdmin();
                CFrameMainMenuObject.setVisible(true);
                
            }
            
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MMA_CCTV;
    private javax.swing.JButton MMA_CarWash;
    private javax.swing.JButton MMA_CarWashReservations;
    private javax.swing.JButton MMA_ClientAddDelete;
    private javax.swing.JButton MMA_ClientCheck;
    private javax.swing.JButton MMA_ClientEdit;
    private javax.swing.JButton MMA_ClientPointsAdd;
    private javax.swing.JButton MMA_PriceList;
    private javax.swing.JButton Main_CloseProgram_Button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
